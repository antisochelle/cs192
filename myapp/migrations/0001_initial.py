# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-03-13 17:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ahdhc_members',
            fields=[
                ('member_id', models.IntegerField(primary_key=True, serialize=False)),
                ('last_name', models.TextField()),
                ('first_name', models.TextField()),
                ('is_student', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'ahdhc_members',
            },
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('date_posted', models.DateField()),
            ],
            options={
                'db_table': 'announcements',
            },
        ),
        migrations.CreateModel(
            name='audit_trail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'audit_trail',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthGroup')),
            ],
            options={
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('username', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthUser')),
            ],
            options={
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthPermission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthUser')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='Cases',
            fields=[
                ('case_id', models.IntegerField(primary_key=True, serialize=False)),
                ('complaint_date_received', models.DateField()),
                ('complaint_sdc_receipt_deadline', models.DateField()),
                ('initial_report_deadline', models.DateField()),
                ('initial_report_release_date', models.DateField()),
                ('jurisdiction', models.IntegerField()),
                ('is_adr_ok', models.BooleanField(default=1)),
                ('adr_deadline', models.DateField()),
                ('did_adr_work', models.BooleanField(default=1)),
                ('case_number', models.CharField(max_length=100)),
                ('adhdc_constitution_deadline', models.DateField()),
                ('ahdhc_constitution_date', models.DateField()),
                ('ahdhc_orientation_date', models.DateField()),
                ('summons_issuance_deadline', models.DateField()),
                ('summons_issuance_date', models.DateField()),
                ('summons_service_deadline', models.DateField()),
                ('summons_service_date', models.DateField()),
                ('summons_receipt_deadline', models.DateField()),
                ('summons_receipt_date', models.DateField()),
                ('respondent_answer_deadline', models.DateField()),
                ('respondednt_answer_date', models.DateField()),
                ('ahdhc_preliminary_deliberation_date', models.DateField()),
                ('preliminary_meeting_notice_deadline', models.DateField()),
                ('preliminary_meeting_date', models.DateField()),
                ('preliminary_meeting_report_done', models.BooleanField(default=0)),
                ('preliminary_meeting_report_date_filed', models.DateField()),
                ('case_resolution_deadline', models.DateField()),
                ('final_committee_report_deadline', models.DateField()),
                ('final_committee_report_receipt_date', models.DateField()),
                ('decision_issuance_deadline', models.DateField()),
                ('decision_issuance_date', models.DateField()),
                ('decision_copy_to_chancellor_deadline', models.DateField()),
                ('decision_copy_to_chancellor_date', models.DateField(db_column='decision_copy to_chancellor_date')),
                ('decision_receipt_date', models.DateField()),
                ('appeal_deadline', models.DateField()),
                ('appeal_made', models.BooleanField(default=0)),
                ('case_closed', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'cases',
            },
        ),
        migrations.CreateModel(
            name='cases_ahdhc_members',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.ForeignKey(db_column='case_id', on_delete=django.db.models.deletion.CASCADE, to='myapp.Cases')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.ahdhc_members')),
            ],
            options={
                'db_table': 'cases_ahdhc_members',
            },
        ),
        migrations.CreateModel(
            name='cases_hearings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hearing_date', models.DateField()),
                ('case_id', models.ForeignKey(db_column='case_id', on_delete=django.db.models.deletion.CASCADE, to='myapp.Cases')),
            ],
            options={
                'db_table': 'cases_hearings',
            },
        ),
        migrations.CreateModel(
            name='cases_misconducts_respondents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('misconduct_details', models.TextField()),
                ('is_guilty', models.BooleanField(default=0)),
                ('corrective_measure', models.TextField()),
                ('case_id', models.ForeignKey(db_column='case_id', on_delete=django.db.models.deletion.CASCADE, to='myapp.Cases')),
            ],
            options={
                'db_table': 'cases_misconducts_respondents',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('college_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'college',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('college_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.College')),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='Misconducts',
            fields=[
                ('misconduct_id', models.IntegerField(primary_key=True, serialize=False)),
                ('csc_section', models.IntegerField()),
                ('misconduct_general', models.CharField(max_length=100)),
                ('misconduct_specific', models.TextField()),
                ('for_student', models.TextField()),
                ('is_serious', models.BooleanField(default=1)),
                ('csc_version', models.TextField()),
            ],
            options={
                'db_table': 'misconducts',
            },
        ),
        migrations.CreateModel(
            name='Respondents',
            fields=[
                ('respondent_id', models.IntegerField(primary_key=True, serialize=False)),
                ('last_name', models.TextField()),
                ('first_name', models.TextField()),
                ('middle_name', models.TextField()),
                ('degree_program', models.TextField()),
                ('is_student', models.BooleanField(default=1)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Department')),
            ],
            options={
                'db_table': 'respondents',
            },
        ),
        migrations.CreateModel(
            name='univ_reps',
            fields=[
                ('rep_id', models.IntegerField(primary_key=True, serialize=False)),
                ('last_name', models.TextField()),
                ('first_name', models.TextField()),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Department')),
            ],
            options={
                'db_table': 'univ_reps',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.TextField(max_length=100)),
                ('password', models.TextField()),
                ('role_id', models.IntegerField()),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UsersRole',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('role_name', models.TextField()),
            ],
            options={
                'db_table': 'users_role',
            },
        ),
        migrations.AlterUniqueTogether(
            name='djangocontenttype',
            unique_together=set([('app_label', 'model')]),
        ),
        migrations.AddField(
            model_name='djangoadminlog',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.DjangoContentType'),
        ),
        migrations.AddField(
            model_name='djangoadminlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthUser'),
        ),
        migrations.AddField(
            model_name='cases_misconducts_respondents',
            name='misconduct_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Misconducts'),
        ),
        migrations.AddField(
            model_name='cases_misconducts_respondents',
            name='respondent_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Respondents'),
        ),
        migrations.AddField(
            model_name='authpermission',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.DjangoContentType'),
        ),
        migrations.AddField(
            model_name='authgrouppermissions',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.AuthPermission'),
        ),
        migrations.AddField(
            model_name='audit_trail',
            name='case_id',
            field=models.ForeignKey(db_column='case_id', on_delete=django.db.models.deletion.CASCADE, to='myapp.Cases'),
        ),
        migrations.AddField(
            model_name='ahdhc_members',
            name='department_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Department'),
        ),
        migrations.AlterUniqueTogether(
            name='authuseruserpermissions',
            unique_together=set([('user', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='authusergroups',
            unique_together=set([('user', 'group')]),
        ),
        migrations.AlterUniqueTogether(
            name='authpermission',
            unique_together=set([('content_type', 'codename')]),
        ),
        migrations.AlterUniqueTogether(
            name='authgrouppermissions',
            unique_together=set([('group', 'permission')]),
        ),
    ]
